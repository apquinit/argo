package start

import (
	"fmt"

	"{{.ProjectName}}/app/middleware"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
)

// InitializeKernel sets up the Gin engine and starts the server
func InitializeKernel() {
	// Load application environment variables
	env := LoadEnv()

	// Set Gin mode
	if env.Mode == "release" {
		gin.SetMode(gin.ReleaseMode)
	} else {
		gin.SetMode(gin.DebugMode)
	}

	// Initialize the Gin engine
	engine := gin.Default()

	// Setup CORS
	engine.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"*"},
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE"},
		AllowHeaders:     []string{"Content-Type", "Authorization"},
		ExposeHeaders:    []string{},
		AllowCredentials: true,
	}))

	// Register routes
	RegisterRoutes(engine)

	// Register global middleware
	engine.Use(middleware.Logger())

	// Register named middleware
	// engine.Use(middleware.Auth())

	// Start the server on the specified port
	address := fmt.Sprintf(":%d", appConfig.Port)
	if err := engine.Run(address); err != nil {
		panic(fmt.Sprintf("failed to start server: %v", err))
	}
}
